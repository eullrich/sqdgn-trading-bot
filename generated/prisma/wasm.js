
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CallScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  messageId: 'messageId',
  rawMessage: 'rawMessage',
  messageTimestamp: 'messageTimestamp',
  tokenSymbol: 'tokenSymbol',
  tokenName: 'tokenName',
  contractAddress: 'contractAddress',
  blockchain: 'blockchain',
  sqdgnLabel: 'sqdgnLabel',
  callType: 'callType',
  marketCap: 'marketCap',
  liquidity: 'liquidity',
  volume24h: 'volume24h',
  currentPriceUsd: 'currentPriceUsd',
  priceUpdatedAt: 'priceUpdatedAt',
  currentMarketCap: 'currentMarketCap',
  marketCapUpdatedAt: 'marketCapUpdatedAt',
  dexScreenerUrl: 'dexScreenerUrl',
  jupiterUrl: 'jupiterUrl',
  raydiumUrl: 'raydiumUrl',
  metadata: 'metadata',
  isValid: 'isValid',
  parsedAt: 'parsedAt'
};

exports.Prisma.TokenPriceSnapshotScalarFieldEnum = {
  time: 'time',
  tokenAddress: 'tokenAddress',
  priceUsd: 'priceUsd',
  priceNative: 'priceNative',
  marketCap: 'marketCap',
  volume5m: 'volume5m',
  volume1h: 'volume1h',
  volume24h: 'volume24h',
  liquidityUsd: 'liquidityUsd',
  priceChange5m: 'priceChange5m',
  priceChange1h: 'priceChange1h',
  priceChange24h: 'priceChange24h',
  txnBuys5m: 'txnBuys5m',
  txnSells5m: 'txnSells5m',
  dexId: 'dexId',
  pairAddress: 'pairAddress',
  source: 'source',
  createdAt: 'createdAt'
};

exports.Prisma.TradingPositionScalarFieldEnum = {
  id: 'id',
  userWalletAddress: 'userWalletAddress',
  tokenAddress: 'tokenAddress',
  tokenSymbol: 'tokenSymbol',
  entryPrice: 'entryPrice',
  entryAmountSol: 'entryAmountSol',
  entryAmountTokens: 'entryAmountTokens',
  entryTxSignature: 'entryTxSignature',
  currentPrice: 'currentPrice',
  currentValueSol: 'currentValueSol',
  highestPrice: 'highestPrice',
  realizedPnlSol: 'realizedPnlSol',
  unrealizedPnlSol: 'unrealizedPnlSol',
  unrealizedPnlPercentage: 'unrealizedPnlPercentage',
  stopLossPrice: 'stopLossPrice',
  takeProfitPrice: 'takeProfitPrice',
  trailingStopPercentage: 'trailingStopPercentage',
  exitPrice: 'exitPrice',
  exitAmountSol: 'exitAmountSol',
  exitReason: 'exitReason',
  exitTxSignature: 'exitTxSignature',
  status: 'status',
  openedAt: 'openedAt',
  closedAt: 'closedAt',
  lastUpdated: 'lastUpdated',
  callId: 'callId'
};

exports.Prisma.TrailingStopScalarFieldEnum = {
  id: 'id',
  positionId: 'positionId',
  highestPrice: 'highestPrice',
  currentStopPrice: 'currentStopPrice',
  trailingPercentage: 'trailingPercentage',
  isActive: 'isActive',
  lastCheckedAt: 'lastCheckedAt',
  triggeredAt: 'triggeredAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserTradingConfigScalarFieldEnum = {
  id: 'id',
  userWalletAddress: 'userWalletAddress',
  telegramUserId: 'telegramUserId',
  isAutoBuyEnabled: 'isAutoBuyEnabled',
  defaultBuyAmountSol: 'defaultBuyAmountSol',
  maxPositionSizeSol: 'maxPositionSizeSol',
  defaultSlippageBps: 'defaultSlippageBps',
  maxSlippageBps: 'maxSlippageBps',
  trailingStopEnabled: 'trailingStopEnabled',
  trailingStopPercentage: 'trailingStopPercentage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AutoBuyQueueScalarFieldEnum = {
  id: 'id',
  userWalletAddress: 'userWalletAddress',
  callId: 'callId',
  tokenAddress: 'tokenAddress',
  tokenSymbol: 'tokenSymbol',
  buyAmountSol: 'buyAmountSol',
  maxPrice: 'maxPrice',
  slippageBps: 'slippageBps',
  status: 'status',
  errorMessage: 'errorMessage',
  tradeId: 'tradeId',
  createdAt: 'createdAt',
  processedAt: 'processedAt'
};

exports.Prisma.TradeHistoryScalarFieldEnum = {
  id: 'id',
  positionId: 'positionId',
  userWalletAddress: 'userWalletAddress',
  tokenAddress: 'tokenAddress',
  tokenSymbol: 'tokenSymbol',
  tradeType: 'tradeType',
  amountSol: 'amountSol',
  amountTokens: 'amountTokens',
  price: 'price',
  slippageBps: 'slippageBps',
  priceImpactPct: 'priceImpactPct',
  txSignature: 'txSignature',
  txStatus: 'txStatus',
  errorMessage: 'errorMessage',
  jupiterQuote: 'jupiterQuote',
  createdAt: 'createdAt',
  confirmedAt: 'confirmedAt'
};

exports.Prisma.PriceAlertScalarFieldEnum = {
  id: 'id',
  positionId: 'positionId',
  userWalletAddress: 'userWalletAddress',
  tokenAddress: 'tokenAddress',
  alertType: 'alertType',
  targetPrice: 'targetPrice',
  isActive: 'isActive',
  triggeredAt: 'triggeredAt',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  eventType: 'eventType',
  entityType: 'entityType',
  entityId: 'entityId',
  userId: 'userId',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};

exports.Prisma.IngestionRunScalarFieldEnum = {
  runId: 'runId',
  startedAt: 'startedAt',
  endedAt: 'endedAt',
  ok: 'ok',
  tokensProcessed: 'tokensProcessed',
  rowsInserted: 'rowsInserted',
  vendorRateStatus: 'vendorRateStatus',
  errorMessage: 'errorMessage',
  dataType: 'dataType'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Call: 'Call',
  TokenPriceSnapshot: 'TokenPriceSnapshot',
  TradingPosition: 'TradingPosition',
  TrailingStop: 'TrailingStop',
  UserTradingConfig: 'UserTradingConfig',
  AutoBuyQueue: 'AutoBuyQueue',
  TradeHistory: 'TradeHistory',
  PriceAlert: 'PriceAlert',
  AuditLog: 'AuditLog',
  IngestionRun: 'IngestionRun'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/ericullrich/Code/sqdgn-trading-bot/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/ericullrich/Code/sqdgn-trading-bot/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// SQDGN Trading Bot Prisma Schema\n// Optimized version of the Supabase database schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Core trading signals from SQDGN Telegram channel\nmodel Call {\n  id        String   @id @default(uuid())\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Message data\n  messageId        String    @unique @map(\"message_id\")\n  rawMessage       String    @map(\"raw_message\")\n  messageTimestamp DateTime? @map(\"message_timestamp\")\n\n  // Parsed token data\n  tokenSymbol     String? @map(\"token_symbol\")\n  tokenName       String? @map(\"token_name\")\n  contractAddress String? @map(\"contract_address\")\n  blockchain      String? @default(\"solana\")\n\n  // SQDGN classification\n  sqdgnLabel String? @map(\"sqdgn_label\") // NEWBORN, ESTABLISHED, VETERAN, MATURING\n  callType   String? @map(\"call_type\") // market_activity, transaction_spotted, etc.\n\n  // Market data at time of call\n  marketCap Decimal? @map(\"market_cap\")\n  liquidity Decimal?\n  volume24h Decimal? @map(\"volume_24h\")\n\n  // Current market data (updated periodically)\n  currentPriceUsd    Decimal?  @map(\"current_price_usd\")\n  priceUpdatedAt     DateTime? @map(\"price_updated_at\")\n  currentMarketCap   Decimal?  @map(\"current_market_cap\")\n  marketCapUpdatedAt DateTime? @map(\"market_cap_updated_at\")\n\n  // URLs for trading platforms\n  dexScreenerUrl String? @map(\"dex_screener_url\")\n  jupiterUrl     String? @map(\"jupiter_url\")\n  raydiumUrl     String? @map(\"raydium_url\")\n\n  // Metadata and validation\n  metadata Json?\n  isValid  Boolean  @default(true) @map(\"is_valid\")\n  parsedAt DateTime @default(now()) @map(\"parsed_at\")\n\n  // Relations\n  tradingPositions TradingPosition[]\n  autoBuyQueue     AutoBuyQueue[]\n\n  @@map(\"calls\")\n}\n\n// Time series price data from DexScreener\nmodel TokenPriceSnapshot {\n  time         DateTime @map(\"time\")\n  tokenAddress String   @map(\"token_address\")\n\n  // Price data\n  priceUsd    Float  @map(\"price_usd\")\n  priceNative Float? @map(\"price_native\")\n  marketCap   Float? @map(\"market_cap\")\n\n  // Volume data\n  volume5m  Float? @map(\"volume_5m\")\n  volume1h  Float? @map(\"volume_1h\")\n  volume24h Float? @map(\"volume_24h\")\n\n  // Liquidity and metrics\n  liquidityUsd Float? @map(\"liquidity_usd\")\n\n  // Price changes\n  priceChange5m  Float? @map(\"price_change_5m\")\n  priceChange1h  Float? @map(\"price_change_1h\")\n  priceChange24h Float? @map(\"price_change_24h\")\n\n  // Transaction data\n  txnBuys5m  Int? @map(\"txn_buys_5m\")\n  txnSells5m Int? @map(\"txn_sells_5m\")\n\n  // DEX info\n  dexId       String? @map(\"dex_id\")\n  pairAddress String? @map(\"pair_address\")\n  source      String  @default(\"dexscreener\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  @@id([time, tokenAddress])\n  @@map(\"token_price_snapshots_5m\")\n}\n\n// User trading positions\nmodel TradingPosition {\n  id                String @id @default(uuid())\n  userWalletAddress String @map(\"user_wallet_address\")\n\n  // Token info\n  tokenAddress String  @map(\"token_address\")\n  tokenSymbol  String? @map(\"token_symbol\")\n\n  // Entry data\n  entryPrice        Decimal @map(\"entry_price\")\n  entryAmountSol    Decimal @map(\"entry_amount_sol\")\n  entryAmountTokens Decimal @map(\"entry_amount_tokens\")\n  entryTxSignature  String? @map(\"entry_tx_signature\")\n\n  // Current position data\n  currentPrice    Decimal? @map(\"current_price\")\n  currentValueSol Decimal? @map(\"current_value_sol\")\n  highestPrice    Decimal? @map(\"highest_price\")\n\n  // P&L tracking\n  realizedPnlSol          Decimal @default(0) @map(\"realized_pnl_sol\")\n  unrealizedPnlSol        Decimal @default(0) @map(\"unrealized_pnl_sol\")\n  unrealizedPnlPercentage Decimal @default(0) @map(\"unrealized_pnl_percentage\")\n\n  // Risk management\n  stopLossPrice          Decimal? @map(\"stop_loss_price\")\n  takeProfitPrice        Decimal? @map(\"take_profit_price\")\n  trailingStopPercentage Decimal? @map(\"trailing_stop_percentage\")\n\n  // Exit data\n  exitPrice       Decimal? @map(\"exit_price\")\n  exitAmountSol   Decimal? @map(\"exit_amount_sol\")\n  exitReason      String?  @map(\"exit_reason\")\n  exitTxSignature String?  @map(\"exit_tx_signature\")\n\n  // Status and timing\n  status      String    @default(\"open\") // open, closed, partial\n  openedAt    DateTime  @default(now()) @map(\"opened_at\")\n  closedAt    DateTime? @map(\"closed_at\")\n  lastUpdated DateTime  @default(now()) @updatedAt @map(\"last_updated\")\n\n  // Relations\n  callId String? @map(\"call_id\")\n  call   Call?   @relation(fields: [callId], references: [id])\n\n  trailingStops TrailingStop[]\n  tradeHistory  TradeHistory[]\n  priceAlerts   PriceAlert[]\n\n  @@map(\"trading_positions\")\n}\n\n// Automated trailing stop management\nmodel TrailingStop {\n  id         String  @id @default(uuid())\n  positionId String? @unique @map(\"position_id\")\n\n  highestPrice       Decimal @map(\"highest_price\")\n  currentStopPrice   Decimal @map(\"current_stop_price\")\n  trailingPercentage Decimal @map(\"trailing_percentage\")\n\n  isActive      Boolean   @default(true) @map(\"is_active\")\n  lastCheckedAt DateTime  @default(now()) @map(\"last_checked_at\")\n  triggeredAt   DateTime? @map(\"triggered_at\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @default(now()) @updatedAt @map(\"updated_at\")\n\n  // Relations\n  position TradingPosition? @relation(fields: [positionId], references: [id])\n\n  @@map(\"trailing_stops\")\n}\n\n// User trading configuration\nmodel UserTradingConfig {\n  id                String  @id @default(uuid())\n  userWalletAddress String  @unique @map(\"user_wallet_address\")\n  telegramUserId    String? @map(\"telegram_user_id\")\n\n  // Auto-buy settings\n  isAutoBuyEnabled    Boolean @default(false) @map(\"is_auto_buy_enabled\")\n  defaultBuyAmountSol Decimal @default(0.1) @map(\"default_buy_amount_sol\")\n  maxPositionSizeSol  Decimal @default(1.0) @map(\"max_position_size_sol\")\n\n  // Trading settings\n  defaultSlippageBps Int @default(100) @map(\"default_slippage_bps\")\n  maxSlippageBps     Int @default(500) @map(\"max_slippage_bps\")\n\n  // Risk management\n  trailingStopEnabled    Boolean @default(true) @map(\"trailing_stop_enabled\")\n  trailingStopPercentage Decimal @default(10.0) @map(\"trailing_stop_percentage\")\n\n  createdAt DateTime @default(now()) @map(\"created_at\")\n  updatedAt DateTime @default(now()) @updatedAt @map(\"updated_at\")\n\n  @@map(\"user_trading_config\")\n}\n\n// Auto-buy queue for processing signals\nmodel AutoBuyQueue {\n  id                String @id @default(uuid())\n  userWalletAddress String @map(\"user_wallet_address\")\n\n  // Signal data\n  callId       String? @map(\"call_id\")\n  tokenAddress String? @map(\"token_address\")\n  tokenSymbol  String  @map(\"token_symbol\")\n\n  // Order parameters\n  buyAmountSol Decimal  @map(\"buy_amount_sol\")\n  maxPrice     Decimal? @map(\"max_price\")\n  slippageBps  Int?     @default(100) @map(\"slippage_bps\")\n\n  // Status tracking\n  status       String  @default(\"pending\") @map(\"status\") // pending, processing, completed, failed, cancelled\n  errorMessage String? @map(\"error_message\")\n\n  // Relations\n  tradeId String? @map(\"trade_id\")\n\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  processedAt DateTime? @map(\"processed_at\")\n\n  // Relations\n  call  Call?         @relation(fields: [callId], references: [id])\n  trade TradeHistory? @relation(fields: [tradeId], references: [id])\n\n  @@map(\"auto_buy_queue\")\n}\n\n// Trade execution history\nmodel TradeHistory {\n  id                String  @id @default(uuid())\n  positionId        String? @map(\"position_id\")\n  userWalletAddress String  @map(\"user_wallet_address\")\n\n  // Token info\n  tokenAddress String  @map(\"token_address\")\n  tokenSymbol  String? @map(\"token_symbol\")\n\n  // Trade details\n  tradeType    String  @map(\"trade_type\") // buy, sell\n  amountSol    Decimal @map(\"amount_sol\")\n  amountTokens Decimal @map(\"amount_tokens\")\n  price        Decimal\n\n  // Execution details\n  slippageBps    Int?     @map(\"slippage_bps\")\n  priceImpactPct Decimal? @map(\"price_impact_pct\")\n  txSignature    String?  @unique @map(\"tx_signature\")\n  txStatus       String   @default(\"pending\") @map(\"tx_status\") // pending, confirmed, failed\n  errorMessage   String?  @map(\"error_message\")\n\n  // Jupiter integration\n  jupiterQuote Json? @map(\"jupiter_quote\")\n\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  confirmedAt DateTime? @map(\"confirmed_at\")\n\n  // Relations\n  position     TradingPosition? @relation(fields: [positionId], references: [id])\n  autoBuyQueue AutoBuyQueue[]\n\n  @@map(\"trade_history\")\n}\n\n// Price alerts for positions\nmodel PriceAlert {\n  id                String  @id @default(uuid())\n  positionId        String? @map(\"position_id\")\n  userWalletAddress String  @map(\"user_wallet_address\")\n  tokenAddress      String  @map(\"token_address\")\n\n  alertType   String  @map(\"alert_type\") // stop_loss, take_profit, trailing_stop, price_target\n  targetPrice Decimal @map(\"target_price\")\n\n  isActive    Boolean   @default(true) @map(\"is_active\")\n  triggeredAt DateTime? @map(\"triggered_at\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n\n  // Relations\n  position TradingPosition? @relation(fields: [positionId], references: [id])\n\n  @@map(\"price_alerts\")\n}\n\n// System audit logging\nmodel AuditLog {\n  id        String   @id @default(uuid())\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  eventType  String  @map(\"event_type\")\n  entityType String  @map(\"entity_type\")\n  entityId   String? @map(\"entity_id\")\n  userId     String? @map(\"user_id\")\n\n  details   Json?\n  ipAddress String? @map(\"ip_address\")\n  userAgent String? @map(\"user_agent\")\n\n  @@map(\"audit_logs\")\n}\n\n// Data ingestion tracking\nmodel IngestionRun {\n  runId     String    @id @default(uuid()) @map(\"run_id\")\n  startedAt DateTime  @default(now()) @map(\"started_at\")\n  endedAt   DateTime? @map(\"ended_at\")\n\n  ok               Boolean? @map(\"ok\")\n  tokensProcessed  Int?     @map(\"tokens_processed\")\n  rowsInserted     Int?     @map(\"rows_inserted\")\n  vendorRateStatus Json?    @map(\"vendor_rate_status\")\n  errorMessage     String?  @map(\"error_message\")\n  dataType         String   @default(\"candles\") @map(\"data_type\")\n\n  @@map(\"ingestion_runs\")\n}\n",
  "inlineSchemaHash": "0ab99adc1e5059888307a5fa5277269ca3058c8a4378f60be58d498868d11094",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Call\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"message_id\"},{\"name\":\"rawMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"raw_message\"},{\"name\":\"messageTimestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"message_timestamp\"},{\"name\":\"tokenSymbol\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_symbol\"},{\"name\":\"tokenName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_name\"},{\"name\":\"contractAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"contract_address\"},{\"name\":\"blockchain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sqdgnLabel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"sqdgn_label\"},{\"name\":\"callType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"call_type\"},{\"name\":\"marketCap\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"market_cap\"},{\"name\":\"liquidity\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"volume24h\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"volume_24h\"},{\"name\":\"currentPriceUsd\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"current_price_usd\"},{\"name\":\"priceUpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"price_updated_at\"},{\"name\":\"currentMarketCap\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"current_market_cap\"},{\"name\":\"marketCapUpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"market_cap_updated_at\"},{\"name\":\"dexScreenerUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"dex_screener_url\"},{\"name\":\"jupiterUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"jupiter_url\"},{\"name\":\"raydiumUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"raydium_url\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isValid\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_valid\"},{\"name\":\"parsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"parsed_at\"},{\"name\":\"tradingPositions\",\"kind\":\"object\",\"type\":\"TradingPosition\",\"relationName\":\"CallToTradingPosition\"},{\"name\":\"autoBuyQueue\",\"kind\":\"object\",\"type\":\"AutoBuyQueue\",\"relationName\":\"AutoBuyQueueToCall\"}],\"dbName\":\"calls\"},\"TokenPriceSnapshot\":{\"fields\":[{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"time\"},{\"name\":\"tokenAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_address\"},{\"name\":\"priceUsd\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"price_usd\"},{\"name\":\"priceNative\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"price_native\"},{\"name\":\"marketCap\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"market_cap\"},{\"name\":\"volume5m\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"volume_5m\"},{\"name\":\"volume1h\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"volume_1h\"},{\"name\":\"volume24h\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"volume_24h\"},{\"name\":\"liquidityUsd\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"liquidity_usd\"},{\"name\":\"priceChange5m\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"price_change_5m\"},{\"name\":\"priceChange1h\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"price_change_1h\"},{\"name\":\"priceChange24h\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"price_change_24h\"},{\"name\":\"txnBuys5m\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"txn_buys_5m\"},{\"name\":\"txnSells5m\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"txn_sells_5m\"},{\"name\":\"dexId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"dex_id\"},{\"name\":\"pairAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"pair_address\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":\"token_price_snapshots_5m\"},\"TradingPosition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userWalletAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_wallet_address\"},{\"name\":\"tokenAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_address\"},{\"name\":\"tokenSymbol\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_symbol\"},{\"name\":\"entryPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"entry_price\"},{\"name\":\"entryAmountSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"entry_amount_sol\"},{\"name\":\"entryAmountTokens\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"entry_amount_tokens\"},{\"name\":\"entryTxSignature\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entry_tx_signature\"},{\"name\":\"currentPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"current_price\"},{\"name\":\"currentValueSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"current_value_sol\"},{\"name\":\"highestPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"highest_price\"},{\"name\":\"realizedPnlSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"realized_pnl_sol\"},{\"name\":\"unrealizedPnlSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"unrealized_pnl_sol\"},{\"name\":\"unrealizedPnlPercentage\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"unrealized_pnl_percentage\"},{\"name\":\"stopLossPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"stop_loss_price\"},{\"name\":\"takeProfitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"take_profit_price\"},{\"name\":\"trailingStopPercentage\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"trailing_stop_percentage\"},{\"name\":\"exitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"exit_price\"},{\"name\":\"exitAmountSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"exit_amount_sol\"},{\"name\":\"exitReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"exit_reason\"},{\"name\":\"exitTxSignature\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"exit_tx_signature\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"opened_at\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"closed_at\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_updated\"},{\"name\":\"callId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"call_id\"},{\"name\":\"call\",\"kind\":\"object\",\"type\":\"Call\",\"relationName\":\"CallToTradingPosition\"},{\"name\":\"trailingStops\",\"kind\":\"object\",\"type\":\"TrailingStop\",\"relationName\":\"TradingPositionToTrailingStop\"},{\"name\":\"tradeHistory\",\"kind\":\"object\",\"type\":\"TradeHistory\",\"relationName\":\"TradeHistoryToTradingPosition\"},{\"name\":\"priceAlerts\",\"kind\":\"object\",\"type\":\"PriceAlert\",\"relationName\":\"PriceAlertToTradingPosition\"}],\"dbName\":\"trading_positions\"},\"TrailingStop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"positionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"position_id\"},{\"name\":\"highestPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"highest_price\"},{\"name\":\"currentStopPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"current_stop_price\"},{\"name\":\"trailingPercentage\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"trailing_percentage\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"lastCheckedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_checked_at\"},{\"name\":\"triggeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"triggered_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"position\",\"kind\":\"object\",\"type\":\"TradingPosition\",\"relationName\":\"TradingPositionToTrailingStop\"}],\"dbName\":\"trailing_stops\"},\"UserTradingConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userWalletAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_wallet_address\"},{\"name\":\"telegramUserId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"telegram_user_id\"},{\"name\":\"isAutoBuyEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_auto_buy_enabled\"},{\"name\":\"defaultBuyAmountSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"default_buy_amount_sol\"},{\"name\":\"maxPositionSizeSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"max_position_size_sol\"},{\"name\":\"defaultSlippageBps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"default_slippage_bps\"},{\"name\":\"maxSlippageBps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_slippage_bps\"},{\"name\":\"trailingStopEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"trailing_stop_enabled\"},{\"name\":\"trailingStopPercentage\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"trailing_stop_percentage\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"}],\"dbName\":\"user_trading_config\"},\"AutoBuyQueue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userWalletAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_wallet_address\"},{\"name\":\"callId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"call_id\"},{\"name\":\"tokenAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_address\"},{\"name\":\"tokenSymbol\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_symbol\"},{\"name\":\"buyAmountSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"buy_amount_sol\"},{\"name\":\"maxPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"max_price\"},{\"name\":\"slippageBps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"slippage_bps\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"status\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"tradeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"trade_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"processed_at\"},{\"name\":\"call\",\"kind\":\"object\",\"type\":\"Call\",\"relationName\":\"AutoBuyQueueToCall\"},{\"name\":\"trade\",\"kind\":\"object\",\"type\":\"TradeHistory\",\"relationName\":\"AutoBuyQueueToTradeHistory\"}],\"dbName\":\"auto_buy_queue\"},\"TradeHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"positionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"position_id\"},{\"name\":\"userWalletAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_wallet_address\"},{\"name\":\"tokenAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_address\"},{\"name\":\"tokenSymbol\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_symbol\"},{\"name\":\"tradeType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"trade_type\"},{\"name\":\"amountSol\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"amount_sol\"},{\"name\":\"amountTokens\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"amount_tokens\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"slippageBps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"slippage_bps\"},{\"name\":\"priceImpactPct\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"price_impact_pct\"},{\"name\":\"txSignature\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tx_signature\"},{\"name\":\"txStatus\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tx_status\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"jupiterQuote\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"jupiter_quote\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"confirmed_at\"},{\"name\":\"position\",\"kind\":\"object\",\"type\":\"TradingPosition\",\"relationName\":\"TradeHistoryToTradingPosition\"},{\"name\":\"autoBuyQueue\",\"kind\":\"object\",\"type\":\"AutoBuyQueue\",\"relationName\":\"AutoBuyQueueToTradeHistory\"}],\"dbName\":\"trade_history\"},\"PriceAlert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"positionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"position_id\"},{\"name\":\"userWalletAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_wallet_address\"},{\"name\":\"tokenAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_address\"},{\"name\":\"alertType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"alert_type\"},{\"name\":\"targetPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"target_price\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"triggeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"triggered_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"position\",\"kind\":\"object\",\"type\":\"TradingPosition\",\"relationName\":\"PriceAlertToTradingPosition\"}],\"dbName\":\"price_alerts\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"event_type\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_type\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"}],\"dbName\":\"audit_logs\"},\"IngestionRun\":{\"fields\":[{\"name\":\"runId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"run_id\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ended_at\"},{\"name\":\"ok\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"ok\"},{\"name\":\"tokensProcessed\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"tokens_processed\"},{\"name\":\"rowsInserted\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"rows_inserted\"},{\"name\":\"vendorRateStatus\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"vendor_rate_status\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"dataType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"data_type\"}],\"dbName\":\"ingestion_runs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

